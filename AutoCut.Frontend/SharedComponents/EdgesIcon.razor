@using AutoCut.Core.Models
<svg class="@GetSvgClass()" width="35" height="35" viewBox="0 0 35 35" xmlns="http://www.w3.org/2000/svg">
    <g class="base">
        <rect y="30" width="5" height="5" rx="2"/>
        <rect x="10" width="5" height="5" rx="2"/>
        <rect width="5" height="5" rx="2"/>
        <rect x="20" y="30" width="5" height="5" rx="2"/>
        <rect x="20" width="5" height="5" rx="2"/>
        <rect x="10" y="30" width="5" height="5" rx="2"/>
        <rect x="30" y="10" width="5" height="5" rx="2"/>
        <rect x="30" width="5" height="5" rx="2"/>
        <rect x="30" y="30" width="5" height="5" rx="2"/>
        <rect x="30" y="20" width="5" height="5" rx="2"/>
        <rect y="20" width="5" height="5" rx="2"/>
        <rect y="10" width="5" height="5" rx="2"/>
    </g>

    @if (Edges.EdgesAlongLenght is 1 or 2)
    {
        <g class="border">
            <rect x="35" width="5" height="35" rx="2" transform="rotate(90 35 0)"/>
        </g>
    }

    @if (Edges.EdgesAlongLenght == 2)
    {
        <g class="border">
            <rect x="35" y="30" width="5" height="35" rx="2" transform="rotate(90 35 30)"/>
        </g>
    }

    @if (Edges.EdgesAlongWidth is 1 or 2)
    {
        <g class="border">
            <rect x="5" y="35" width="5" height="35" rx="2" transform="rotate(-180 5 35)"/>
        </g>
    }

    @if (Edges.EdgesAlongWidth == 2)
    {
        <g class="border">
            <rect x="30" width="5" height="35" rx="2"/>
        </g>
    }
</svg>


@code
{

    [Parameter]
    public EdgeReduction Edges { get; set; } = EdgeReduction.NoEdges;

    [Parameter]
    public EdgesIconAccent Accent { get; set; } = EdgesIconAccent.None;

    [Parameter]
    public bool MutedColor { get; set; }

    public enum EdgesIconAccent
    {
        None,
        Border,
        All
    }

    private string GetSvgClass()
    {
        var svgClass = Accent switch
        {
            EdgesIconAccent.None => "no-accent",
            EdgesIconAccent.Border => "border-accent",
            EdgesIconAccent.All => "all-accent",
            _ => throw new ArgumentOutOfRangeException()
            };

        if (MutedColor)
            svgClass += " muted";

        return svgClass;
    }
}